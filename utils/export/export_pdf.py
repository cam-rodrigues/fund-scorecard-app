from reportlab.lib.pagesizes import LETTER
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib.enums import TA_CENTER
from reportlab.lib.units import inch
from reportlab.lib import colors
from bs4 import BeautifulSoup
from datetime import datetime

def export_pdf(summary, proposal_html, buffer):
    doc = SimpleDocTemplate(buffer, pagesize=LETTER, rightMargin=72, leftMargin=72, topMargin=72, bottomMargin=72)
    styles = getSampleStyleSheet()

    # --- Title Style ---
    title_style = ParagraphStyle(
        name='Title',
        fontSize=18,
        leading=22,
        alignment=TA_CENTER,
        spaceAfter=20
    )

    # --- Body Style ---
    body_style = styles['BodyText']
    body_style.fontSize = 11
    body_style.leading = 14

    # --- Build PDF Elements ---
    elements = []

    # Title & Date
    elements.append(Paragraph("Proposal Summary", title_style))
    elements.append(Paragraph(f"Generated by FidSync • {datetime.today().strftime('%B %d, %Y')}", body_style))
    elements.append(Spacer(1, 12))

    # --- Summary Section ---
    elements.append(Paragraph("<b>Performance Summary</b>", styles['Heading3']))
    for line in summary.strip().split("\n"):
        elements.append(Paragraph(line.strip(), body_style))
    elements.append(Spacer(1, 16))

    # --- Proposal HTML Section ---
    elements.append(Paragraph("<b>Proposal Recommendation</b>", styles['Heading3']))
    soup = BeautifulSoup(proposal_html, "html.parser")
    for elem in soup.contents:
        if elem.name == "h3":
            elements.append(Paragraph(f"<b>{elem.get_text()}</b>", styles['Heading4']))
        elif elem.name == "b":
            elements.append(Paragraph(f"<b>{elem.get_text()}</b>", body_style))
        elif elem.name == "em":
            elements.append(Paragraph(f"<i>{elem.get_text()}</i>", body_style))
        elif elem.name == "ul":
            for li in elem.find_all("li"):
                elements.append(Paragraph("• " + li.get_text(), body_style))
        elif elem.name == "br":
            elements.append(Spacer(1, 6))
        elif elem.string and elem.string.strip():
            elements.append(Paragraph(elem.string.strip(), body_style))

    # --- Footer Disclaimer ---
    elements.append(Spacer(1, 24))
    disclaimer = "This proposal was generated automatically by FidSync and should be reviewed manually before use."
    elements.append(Paragraph(f"<i>{disclaimer}</i>", body_style))

    # Build the PDF
    doc.build(elements)
