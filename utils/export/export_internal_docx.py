from docx import Document
from docx.shared import Pt, Inches
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from datetime import datetime
from bs4 import BeautifulSoup
import os

# ---------- helper ----------
def add_clean_html_paragraphs(doc, html_text):
    # 1️⃣ strip left-padding on every line so tags start at column 0
    cleaned = "\n".join(line.lstrip() for line in html_text.splitlines())

    # 2️⃣ parse the cleaned string
    soup = BeautifulSoup(cleaned, "html.parser")

    for elem in soup.contents:
        if elem.name == "h3":
            p = doc.add_paragraph()
            r = p.add_run(elem.get_text())
            r.bold = True
            r.font.size = Pt(14)

        elif elem.name == "b":
            p = doc.add_paragraph()
            r = p.add_run(elem.get_text())
            r.bold = True

        elif elem.name == "em":
            p = doc.add_paragraph()
            r = p.add_run(elem.get_text())
            r.italic = True

        elif elem.name == "ul":
            for li in elem.find_all("li"):
                doc.add_paragraph(li.get_text(), style="List Bullet")

        elif elem.name == "br":
            doc.add_paragraph("")

        elif elem.string and elem.string.strip():
            doc.add_paragraph(elem.string.strip())
# ---------- /helper ----------

def export_client_docx_fancy(
        df,
        proposal_text,
        buffer,
        client_name="Client Name",
        user="Cameron Rodrigues",
        firm="Procyon Partners",
        logo_path=None
):
    doc = Document()
    base_style = doc.styles["Normal"].font
    base_style.name = "Times New Roman"
    base_style.size = Pt(12)

    # Header
    sec = doc.sections[0]
    hdr = sec.header.paragraphs[0]
    hdr.text = f"Generated by FidSync – {datetime.now():%B %d, %Y}"
    hdr.alignment = WD_PARAGRAPH_ALIGNMENT.RIGHT

    # Optional logo
    if logo_path and os.path.exists(logo_path):
        doc.add_picture(logo_path, width=Inches(2.3))

    # Title block
    t = doc.add_paragraph("Client Proposal")
    t.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER
    t.runs[0].bold = True
    t.runs[0].font.size = Pt(18)

    doc.add_paragraph(f"Prepared for: {client_name}")
    doc.add_paragraph(f"Prepared by: {user} | {firm}")
    doc.add_paragraph("")

    # Proposal summary
    doc.add_paragraph("Proposal Summary", style="Heading 1")
    add_clean_html_paragraphs(doc, proposal_text)

    # Fund table
    doc.add_paragraph("\nFund Performance Overview", style="Heading 1")
    table = doc.add_table(rows=1, cols=len(df.columns))
    table.style = "Table Grid"
    hdr_cells = table.rows[0].cells
    for i, col in enumerate(df.columns):
        hdr_cells[i].text = str(col)

    for _, row in df.iterrows():
        cells = table.add_row().cells
        for i, val in enumerate(row):
            cells[i].text = f"{val:.2f}" if isinstance(val, float) else str(val)

    # Disclaimer
    doc.add_paragraph("")
    d = doc.add_paragraph(
        "This proposal was generated automatically by FidSync and should be reviewed manually for accuracy before distribution."
    )
    d.runs[0].italic = True

    # Footer – page numbers
    ftr = sec.footer.paragraphs[0]
    ftr.text = "Page "
    ftr.add_run().add_field("PAGE")
    ftr.add_run(" of ")
    ftr.add_run().add_field("NUMPAGES")
    ftr.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    # Save to provided BytesIO / path
    doc.save(buffer)
