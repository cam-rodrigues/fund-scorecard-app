from fpdf import FPDF
from datetime import datetime
import os

class ProposalPDF(FPDF):
    def header(self):
        self.set_font("Times", "B", 12)
        self.cell(0, 10, f"FidSync Proposal Summary – {datetime.now().strftime('%B %d, %Y')}", ln=True, align="C")
        self.ln(4)

    def footer(self):
        self.set_y(-25)
        self.set_font("Times", "I", 9)
        self.multi_cell(0, 10,
            "Generated by FidSync Beta\n"
            "This content was created automatically and may not be perfectly accurate.\n"
            "Please verify data against official sources before use."
        )

def export_pdf(summary_text, proposal_html, pdf_path):
    pdf = ProposalPDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.set_font("Times", "", 12)

    combined_text = summary_text.strip() + "\n\n" + strip_html_for_pdf(proposal_html)
    for line in combined_text.splitlines():
        pdf.multi_cell(0, 10, line)

    os.makedirs(os.path.dirname(pdf_path), exist_ok=True)
    pdf.output(pdf_path)

def strip_html_for_pdf(html_text):
    import re
    from bs4 import BeautifulSoup

    soup = BeautifulSoup(html_text, "html.parser")
    clean_text = []

    for elem in soup.descendants:
        if elem.name == "li":
            clean_text.append(f"• {elem.get_text(strip=True)}")
        elif elem.name == "br":
            clean_text.append("")
        elif elem.name in ["b", "em", "h3"]:
            clean_text.append(elem.get_text(strip=True).upper() if elem.name == "h3" else elem.get_text(strip=True))
        elif isinstance(elem, str):
            text = elem.strip()
            if text:
                clean_text.append(text)

    return "\n".join(clean_text)
